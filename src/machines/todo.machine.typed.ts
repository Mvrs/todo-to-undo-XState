// This file is auto-generated by a CLI tool
// Ask @mattpocock about it

import { useMachine } from "@xstate/react";
import {
  StateMachine,
  AnyEventObject,
  EventObject,
  State,
  Interpreter,
  ActionObject,
  ActionFunction
} from "xstate";

export type TodoMachineStateMatches = "add" | "delete";

export interface TodoMachineOptions<
  Context = any,
  Event extends EventObject = AnyEventObject
> {
  context?: Partial<Context>;
  actions: {
    actions:
      | ActionObject<
          Context,
          Extract<Event, { type: "ADD" } | { type: "REMOVE" }>
        >
      | ActionFunction<
          Context,
          Extract<Event, { type: "ADD" } | { type: "REMOVE" }>
        >;
  };
  devTools?: boolean;
}

export type TodoMachineState<Context, Event extends EventObject> = Omit<
  State<Context, Event>,
  "matches"
> & {
  matches: (match: TodoMachineStateMatches) => boolean;
};

export const useTodoMachine = <
  Context = any,
  StateSchema = any,
  Event extends EventObject = AnyEventObject
>(
  machine: StateMachine<Context, StateSchema, Event>,
  options: TodoMachineOptions<Context, Event>
): [
  TodoMachineState<Context, Event>,
  Interpreter<Context, StateSchema, Event>["send"],
  Interpreter<Context, StateSchema, Event>
] => {
  return useMachine(machine as any, options as any) as any;
};
